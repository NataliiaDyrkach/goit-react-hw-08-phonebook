{"version":3,"file":"static/js/155.afedbe62.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage.js"],"sourcesContent":["export const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.loading;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"span\":\"ContactForm_span__w4N46\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContact } from 'redux/contacts/oparation';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './ContactForm.module.css';\nimport { Report } from 'notiflix';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onChangeName = event => setName(event.currentTarget.value);\n  const onChangeNumber = event => setNumber(event.currentTarget.value);\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = { id: nanoid(), name, number };\n\n    contacts.some(contact => contact.name === name)\n      ? Report.warning(`${name} is already in contacts!`)\n      : dispatch(addContact(newContact));\n    Report.success(`${name} created successfully!`);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          onChange={onChangeName}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          onChange={onChangeNumber}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport css from '../ContactForm/ContactForm.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFieldFilter = event =>\n    dispatch(setFilter(event.currentTarget.value));\n\n  return (\n    <div className={css.form}>\n      <h2 className={css.text}>Contacts</h2>\n      <p className={css.text}>Find contacts by name</p>\n      <label className={css.label}>\n        <input\n          className={css.input}\n          name=\"filter\"\n          type=\"text\"\n          value={filter}\n          onChange={changeFieldFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/oparation';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { FaTrash, FaUserEdit } from 'react-icons/fa';\nimport { Report } from 'notiflix';\n\nconst ContactList = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const deleteSelectedContact = id => {\n    dispatch(deleteContact(id));\n    Report.success('Сontact deleted successfully!');\n  };\n\n  const filterdContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContactList = filterdContacts();\n\n  return (\n    <ul className={css.list}>\n      {filteredContactList.map(({ id, name, number }) => {\n        return (\n          <li className={css.item} key={id}>\n            <FaUserEdit />\n            <p>{name}:</p>\n            <p>{number}</p>\n            <button\n              className={css.button}\n              type=\"button\"\n              onClick={() => deleteSelectedContact(id)}\n              id={id}\n            >\n              <FaTrash />\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/oparation';\n\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n    return (\n    <div>\n      <ContactForm />\n\n      <Filter />\n\n      <ContactList />\n    </div>\n  );\n}\n\nexport default ContactsPage;"],"names":["selectFilter","state","filter","selectContacts","contacts","items","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","className","css","onSubmit","event","preventDefault","newContact","id","nanoid","some","contact","Report","addContact","onChange","currentTarget","value","type","pattern","title","required","setFilter","filteredContactList","normalizedFilter","toLowerCase","includes","filterdContacts","map","onClick","deleteContact","deleteSelectedContact","useEffect","fetchContacts"],"sourceRoot":""}